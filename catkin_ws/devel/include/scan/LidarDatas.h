// Generated by gencpp from file scan/LidarDatas.msg
// DO NOT EDIT!


#ifndef SCAN_MESSAGE_LIDARDATAS_H
#define SCAN_MESSAGE_LIDARDATAS_H

#include <ros/service_traits.h>


#include <scan/LidarDatasRequest.h>
#include <scan/LidarDatasResponse.h>


namespace scan
{

struct LidarDatas
{

typedef LidarDatasRequest Request;
typedef LidarDatasResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct LidarDatas
} // namespace scan


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::scan::LidarDatas > {
  static const char* value()
  {
    return "b24f18b58a2ea88af3a36911a1be8ff0";
  }

  static const char* value(const ::scan::LidarDatas&) { return value(); }
};

template<>
struct DataType< ::scan::LidarDatas > {
  static const char* value()
  {
    return "scan/LidarDatas";
  }

  static const char* value(const ::scan::LidarDatas&) { return value(); }
};


// service_traits::MD5Sum< ::scan::LidarDatasRequest> should match 
// service_traits::MD5Sum< ::scan::LidarDatas > 
template<>
struct MD5Sum< ::scan::LidarDatasRequest>
{
  static const char* value()
  {
    return MD5Sum< ::scan::LidarDatas >::value();
  }
  static const char* value(const ::scan::LidarDatasRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::scan::LidarDatasRequest> should match 
// service_traits::DataType< ::scan::LidarDatas > 
template<>
struct DataType< ::scan::LidarDatasRequest>
{
  static const char* value()
  {
    return DataType< ::scan::LidarDatas >::value();
  }
  static const char* value(const ::scan::LidarDatasRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::scan::LidarDatasResponse> should match 
// service_traits::MD5Sum< ::scan::LidarDatas > 
template<>
struct MD5Sum< ::scan::LidarDatasResponse>
{
  static const char* value()
  {
    return MD5Sum< ::scan::LidarDatas >::value();
  }
  static const char* value(const ::scan::LidarDatasResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::scan::LidarDatasResponse> should match 
// service_traits::DataType< ::scan::LidarDatas > 
template<>
struct DataType< ::scan::LidarDatasResponse>
{
  static const char* value()
  {
    return DataType< ::scan::LidarDatas >::value();
  }
  static const char* value(const ::scan::LidarDatasResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SCAN_MESSAGE_LIDARDATAS_H
